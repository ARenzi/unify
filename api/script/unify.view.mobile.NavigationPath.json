{"attributes": {"fullName": "unify.view.mobile.NavigationPath", "packageName": "unify.view.mobile", "type": "class", "name": "NavigationPath", "superClass": "qx.core.Object"}, "type": "class", "children": [{"attributes": {"text": "<p>Model class for a path to define a position\ninside a mobile Unify application.</p>"}, "type": "desc"}, {"type": "methods", "children": [{"attributes": {"access": "private", "name": "__compile"}, "type": "method", "children": [{"attributes": {"text": "<p>Compiles data from parts and refreshes {@link #location} property.</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "name": "__getPart"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "size", "name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of view to return</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the view at the given index. Supports referencing from beginning, using\npositive indexes and from back, using negative indexes. Automatically falls\nback to last index if no index is given.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>ID of view at given position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "apply": "unify.view.mobile.NavigationPath#location", "name": "_applyLocation"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Applies changes of the property value of the property <code>location</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #location}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getLocation", "fromProperty": "location"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>location</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #location}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>location</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getParam"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "size", "name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of view to return param for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the param of the view at the given index. Supports referencing from beginning, using\npositive indexes and from back, using negative indexes. Automatically falls\nback to last index if no index is given.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Param of view at given position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSegment"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "size", "name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of view to return param for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the segment of the view at the given index. Supports referencing from beginning, using\npositive indexes and from back, using negative indexes. Automatically falls\nback to last index if no index is given.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Segment of view at given position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSize"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the size (read: depth) of the location</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Size of location</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getView"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"defaultValue": "size", "name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of view to return</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the view at the given index. Supports referencing from beginning, using\npositive indexes and from back, using negative indexes. Automatically falls\nback to last index if no index is given.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>ID of view at given position</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLocation", "fromProperty": "location"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>location</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>location</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #location}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isValid"}, "type": "method", "children": [{"attributes": {"text": "<p>Whether the path contains valid views.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<code>true</code> when the path is valid"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetLocation", "fromProperty": "location"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>location</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #location}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLocation", "fromProperty": "location"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>location</code>.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>location</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #location}.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setParam"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "param"}, "type": "param", "children": [{"attributes": {"text": "<p>Any valid parameter</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of view to modify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replaces the param of the view at the given index.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setSegment"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "segment"}, "type": "param", "children": [{"attributes": {"text": "<p>Any valid segment name</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "index"}, "type": "param", "children": [{"attributes": {"text": "<p>Position of view to modify</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Number"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Replaces the segment of the view at the given index.</p>"}, "type": "desc"}]}, {"attributes": {"docFrom": "qx.core.Object", "overriddenFrom": "qx.core.Object", "name": "toString"}, "type": "method"}]}, {"type": "properties", "children": [{"attributes": {"allowNull": "true", "propertyType": "new", "check": "String", "name": "location", "apply": "_applyLocation"}, "type": "property", "children": [{"attributes": {"text": "<p>A path divided by slashes where every part must contain\na view ID with an optional parameter (divided by a colon) e.g.\n&#8220;foo/bar:123/baz&#8221;</p>"}, "type": "desc"}]}]}]}